
The game is an object that gets passed around between scripts, referred to as obj.

JOINTS:
Parts have joints that store physical and other data such as the parts the do connect, the type of joint and its 
physical characteristics. Jounts get stored in obj.VehicleJoints. The parts the connect refer to indexes of parts in obj.Vehicle.
The initial joint data is writen upon part placement in building mode

HITBOX:
stores the properties of the hitbox of a part
General:

The "Type" of a hitbox defines what object pymunk should create for the hitbox ("rect" for rectangle, "poly", "circle"...)
The "Pos" of a hitbox is the position of the hitboxes top left corner
The "Size" of a hitbox describes various things dependent on the Type of a hitbox:
    if the type is "rect", the size is the size on x and y of the rect. This gets saved as list
    if the type is "poly", the size is  a list of vertices for the poly body. This gets saved as list
    if the type is "circle", the size is the radius of the circle. This gets saved as int

!=>According to current plans each part can only one hitbox

TEXTURES:

A part has textures defined in the list textures. Each texture has the following properties:
"Image" is the png image of the part
"Pos" is the positio of the texture relative to the position of the part
"Size" is the size of the texture

=> Texture[0] will be rendered first


Variablen:
obj.partdict: speichert die Daten aller Teile, können nach Namen gesucht werden 
Beispiele:
obj.partdict["Metal Frame"]["Tex"] ist der NAME der Textur von Metal Frame

obj.textures: speichert alle Texturen als Bilder, können nach namen aus obj.partdict gesucht werden

obj.Vehicle: speichert das Fahrzeug und seine Daten in einer Matrix

obj.dimensions: speichert Größe des aktuellen fensters (obj.screen) als tuple

c,cc,ccc usw. werden als Zähler verwendet

mx, my: mouseX, mouseY: positionen der Maus

obj.scalefactor: speicher Skalierungsfaktor von 1200 x 800 auf aktuelle Fenstergröße

obj.JointPositions speichert die Positionen aller Joints im Baumodus als Liste

obj.VehicleJoints speichert die Daten (beteiligte Teile, physisches) aller Joints im Fahrzeug

obj.biomes speichert alle terrain generator einstellungen für alle biome

